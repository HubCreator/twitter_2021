{"version":3,"sources":["my_firebase.js","components/AuthForm.js","components/SocialLogIn.js","routes/Auth.js","components/Tweet.js","routes/MakingTweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","error","setError","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","rel","href","integrity","crossorigin","SocialLogIn","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","class","Auth","Tweet","tweetObj","isOwner","edit","setEdit","text","updateTweet","setUpdateTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","fileStringUrl","toggleEditing","update","src","alt","width","height","icon","faTrash","faPencilAlt","MakingTweet","userObj","tweet","setTweet","fileString","setFileString","fileStringRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","accept","targetFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","visibility","faTimes","Home","tweetList","setTweetList","useEffect","orderBy","onSnapshot","snapshot","tweetArray","docs","map","element","Profile","refreshUser","displayName","updateName","setUpdateName","history","useHistory","getMyTweets","where","get","tweets","updateProfile","signOut","push","navigation","to","AppRouter","isLoggedIn","Navigation","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.813c82a0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"my_firebase\";\nimport React, { useState } from \"react\";\nimport \"css/styles.css\";\n\nconst AuthForm = () => {\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true); // if true -> have no account.. new user\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create new account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <i className=\"fab fa-twitter\"></i>\n      <form onSubmit={onSubmit} className=\"login-page__form\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          onChange={onChange}\n        />\n        <input\n          className=\"login-page__form__submit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n      </form>\n      <span className=\"login-page__form__signin\" onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n      <div className=\"login-page__error-msg\">{error}</div>\n\n      <link\n        rel=\"stylesheet\"\n        href=\"https://use.fontawesome.com/releases/v5.15.3/css/all.css\"\n        integrity=\"sha384-SZXxX4whJ79/gErwcOYf+zWLeJdY/qpuqC4cAa9rOGUstPomtqpuNWT9wdPEn2fk\"\n        crossorigin=\"anonymous\"\n      ></link>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"my_firebase\";\nimport React from \"react\";\n\nconst SocialLogIn = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"social-login\">\n      <button\n        className=\"social-login__button\"\n        onClick={onSocialClick}\n        name=\"google\"\n      >\n        Continue with Google\n        <i class=\"fab fa-google\"></i>\n      </button>\n      <button\n        className=\"social-login__button\"\n        onClick={onSocialClick}\n        name=\"github\"\n      >\n        Continue with Github\n        <i class=\"fab fa-github\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default SocialLogIn;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"my_firebase\";\nimport AuthForm from \"components/AuthForm\";\nimport SocialLogIn from \"components/SocialLogIn\";\n\nconst Auth = () => {\n  return (\n    <div className=\"login-page\">\n      <AuthForm />\n      <SocialLogIn />\n    </div>\n  );\n};\n\nexport default Auth;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { dbService, storageService } from \"my_firebase\";\nimport React, { useState } from \"react\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [edit, setEdit] = useState(false); // whether it's edit mode or not\n  const [updateTweet, setUpdateTweet] = useState(tweetObj.text); // modify the value of the input\n\n  const onDeleteClick = async () => {\n    const check = window.confirm(\n      \"Are you sure you want to delete this tweet??\"\n    );\n    if (check) {\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.fileStringUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEdit((prev) => !prev); // toggle function especially about edit val\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(tweetObj, updateTweet);\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\n      text: updateTweet,\n    });\n    setEdit(false);\n  };\n\n  const editTweet = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setUpdateTweet(value);\n  };\n\n  return (\n    <div>\n      {edit ? (\n        <form className=\"home-screen__modify\" onSubmit={onSubmit}>\n          <input\n            id=\"modify-tweet\"\n            type=\"text\"\n            placeholder=\"Edit your tweet\"\n            value={updateTweet}\n            required\n            onChange={editTweet}\n          />\n          {/* <input id=\"modify-submit\" type=\"submit\" value=\"Update Tweet\" />\n          <button id=\"modify-cancel\" onClick={toggleEditing}>\n            Cancel\n          </button> */}\n          <span id=\"modify-submit\" onClick={onSubmit}>\n            Update Tweet\n          </span>\n          <span id=\"modify-cancel\" onClick={toggleEditing}>\n            Cancel\n          </span>\n        </form>\n      ) : (\n        <>\n          <h5 className=\"home-screen__tweet-list__text\">{tweetObj.text}</h5>\n\n          <div className=\"home-screen__tweet-list__contents\">\n            {tweetObj.fileStringUrl && (\n              <img\n                className=\"home-screen__tweet-list__contents__img\"\n                src={tweetObj.fileStringUrl}\n                alt=\"img\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            )}\n            {isOwner && (\n              <div className=\"home-screen__tweet-list__contents__tools\">\n                <FontAwesomeIcon\n                  id=\"delete\"\n                  icon={faTrash}\n                  onClick={onDeleteClick}\n                />\n                <FontAwesomeIcon\n                  id=\"modify\"\n                  icon={faPencilAlt}\n                  onClick={toggleEditing}\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import { dbService, storageService } from \"my_firebase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState } from \"react\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst MakingTweet = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [fileString, setFileString] = useState(\"\"); // transform img file to string\n\n  // add data to db which I inputed data\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let fileStringUrl = \"\";\n    if (fileString !== \"\") {\n      const fileStringRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileStringRef.putString(fileString, \"data_url\");\n      fileStringUrl = await response.ref.getDownloadURL();\n    }\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      fileStringUrl,\n    };\n\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\"); // clear the input\n    setFileString(\"\");\n  };\n\n  // if value changed update current value\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setTweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const targetFile = files[0]; // get the file\n    const reader = new FileReader(); // create a reader\n    reader.onloadend = (finishedEvent) => {\n      // add event listener to the reader when it's finished loading the file\n      console.log(finishedEvent);\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setFileString(result);\n    };\n    reader.readAsDataURL(targetFile);\n  };\n\n  const onClearPhotoClicked = () => {\n    setFileString(\"\");\n  };\n\n  return (\n    <>\n      <form className=\"home-screen__form\" onSubmit={onSubmit}>\n        <div className=\"home-screen__form__first-row\">\n          <input\n            className=\"home-screen__form__first-row__tweet\"\n            name={tweet}\n            value={tweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"what's on your mind?\"\n            maxLength={120}\n          />\n          <button\n            className=\"home-screen__form__first-row__submit\"\n            type=\"submit\"\n            onClick={onSubmit}\n          >\n            <i className=\"fas fa-arrow-right\"></i>\n          </button>\n        </div>\n        <div className=\"home-screen__form__second-row\">\n          <label for=\"choose-file\" className=\"\">\n            <span>\n              Add Photos<i className=\"fas fa-plus\"></i>\n            </span>\n          </label>\n        </div>\n        <input\n          id=\"choose-file\"\n          className=\"home-screen__form__choose-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{ visibility: \"hidden\" }}\n        />\n        {fileString && (\n          <div className=\"home-screen__form__imgPrev-contents\">\n            <img\n              className=\"home-screen__form__imgPrev-contents__img\"\n              src={fileString}\n              width=\"50px\"\n              height=\"50px\"\n            />\n            <label>\n              <span\n                className=\"home-screen__form__imgPrev-contents__clear\"\n                onClick={onClearPhotoClicked}\n              >\n                Clear\n                <FontAwesomeIcon id=\"clear\" icon={faTimes} />\n              </span>\n            </label>\n          </div>\n        )}\n      </form>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://use.fontawesome.com/releases/v5.15.3/css/all.css\"\n        integrity=\"sha384-SZXxX4whJ79/gErwcOYf+zWLeJdY/qpuqC4cAa9rOGUstPomtqpuNWT9wdPEn2fk\"\n        crossorigin=\"anonymous\"\n      ></link>\n    </>\n  );\n};\n\nexport default MakingTweet;\n","import { dbService, storageService } from \"my_firebase\";\nimport React, { useEffect, useState } from \"react\";\nimport Tweet from \"components/Tweet\";\nimport MakingTweet from \"./MakingTweet\";\n\nconst Home = ({ userObj }) => {\n  const [tweetList, setTweetList] = useState([]);\n\n  // componentDidMount\n  useEffect(() => {\n    dbService\n      .collection(\"tweets\") // from\n      .orderBy(\"createdAt\", \"desc\") // order by\n      .onSnapshot((snapshot) => {\n        // when something happen in your db it notifies\n        const tweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id, // add doc.id\n          ...doc.data(),\n        }));\n        setTweetList(tweetArray); // update tweetList\n      });\n  }, []);\n\n  return (\n    <div className=\"home-screen\">\n      <MakingTweet userObj={userObj} />\n\n      <div className=\"home-screen__tweet-list\">\n        {tweetList.map((element) => (\n          <Tweet\n            key={element.id}\n            tweetObj={element}\n            isOwner={element.creatorId === userObj.uid} // it returns true or false\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { authService, dbService } from \"my_firebase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [updateName, setUpdateName] = useState(userObj.displayName);\n  const history = useHistory();\n\n  useEffect(() => {\n    getMyTweets();\n  }, []);\n\n  const onLogOutClick = () => {\n    const check = window.confirm(\"Seriously?!?!?\");\n    if (check) {\n      authService.signOut();\n      history.push(\"/\");\n    }\n  };\n\n  const getMyTweets = async () => {\n    const tweets = await dbService\n      .collection(\"tweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n\n    console.log(tweets.docs.map((element) => element.data()));\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setUpdateName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== updateName) {\n      await userObj.updateProfile({\n        displayName: updateName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"profile\">\n      <form className=\"profile__form\" onSubmit={onSubmit}>\n        <input\n          className=\"profile__form__modify\"\n          name=\"name\"\n          value={updateName}\n          type=\"text\"\n          placeholder=\"Display name\"\n          onChange={onChange}\n        />\n        <span className=\"profile__form__submit\" onClick={onSubmit}>\n          Update Profile\n        </span>\n      </form>\n      <div className=\"profile__hr\"></div>\n      <span className=\"profile__log-out\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst navigation = ({ userObj }) => (\n  <nav>\n    <ul className=\"nav\">\n      <li className=\"nav-list\">\n        <Link to=\"/\">\n          <i className=\"fab fa-twitter\"></i>\n        </Link>\n      </li>\n      <li className=\"nav-list\">\n        <Link to=\"/profile\" className=\"nav-list__profile\">\n          <i className=\"fas fa-user-edit\"></i>\n          <span>{userObj.displayName}'s Profile</span>\n        </Link>\n      </li>\n    </ul>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://use.fontawesome.com/releases/v5.15.3/css/all.css\"\n      integrity=\"sha384-SZXxX4whJ79/gErwcOYf+zWLeJdY/qpuqC4cAa9rOGUstPomtqpuNWT9wdPEn2fk\"\n      crossorigin=\"anonymous\"\n    ></link>\n  </nav>\n);\n\nexport default navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"my_firebase\";\n// import \"css/styles.css\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      //it happens when you log in or log out automatically\n      if (user) {\n        // setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n        // setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}